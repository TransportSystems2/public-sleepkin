// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pillow.Infrastructure.Data;

namespace Pillow.Infrastructure.Data.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20201003100111_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Pillow.ApplicationCore.Entities.BookAggregate.Book", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Author")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CoverUri")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Code");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Pillow.ApplicationCore.Entities.BookAggregate.BookTag", b =>
                {
                    b.Property<string>("BookCode")
                        .HasColumnType("text");

                    b.Property<string>("TagCode")
                        .HasColumnType("text");

                    b.HasKey("BookCode", "TagCode");

                    b.HasIndex("TagCode");

                    b.ToTable("BookTag");
                });

            modelBuilder.Entity("Pillow.ApplicationCore.Entities.BookAggregate.Tag", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("Code");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Pillow.ApplicationCore.Entities.BookAggregate.Track", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("BookCode")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrailer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Code");

                    b.HasIndex("BookCode");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Pillow.ApplicationCore.Entities.BookAggregate.BookTag", b =>
                {
                    b.HasOne("Pillow.ApplicationCore.Entities.BookAggregate.Book", "Book")
                        .WithMany("BookTag")
                        .HasForeignKey("BookCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pillow.ApplicationCore.Entities.BookAggregate.Tag", "Tag")
                        .WithMany("BookTag")
                        .HasForeignKey("TagCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pillow.ApplicationCore.Entities.BookAggregate.Track", b =>
                {
                    b.HasOne("Pillow.ApplicationCore.Entities.BookAggregate.Book", "Book")
                        .WithMany("Tracks")
                        .HasForeignKey("BookCode");
                });
#pragma warning restore 612, 618
        }
    }
}
