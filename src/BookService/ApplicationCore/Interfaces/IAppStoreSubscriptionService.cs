using System;
using System.Diagnostics;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;

namespace Pillow.ApplicationCore.Interfaces
{
    public interface IAppStoreSubscriptionService
    {
        Task<VerifyReceiptResponse> VerifyReceipt(string receiptDate,
            bool excludeOldTransaction,
            CancellationToken cancellationToken,
            bool isSandboxEnvironment = false);
    }

    public class VerifeReceiptRequest
    {
        [JsonPropertyName("receipt-data")]
        public string ReceiptDate { get; set; }

        [JsonPropertyName("password")]
        public string Password { get; set; }

        [JsonPropertyName("exclude-old-transactions")]
        public bool ExcludeOldTransaction { get; set;}
    }

    public class VerifyReceiptResponse
    {
        /// <summary>
        /// The environment for which the receipt was generated.
        /// Possible values: Sandbox, Production
        /// </summary>
        [JsonPropertyName("environment")]
        public string Environment { get; set; }

        /// <summary>
        /// An indicator that an error occurred during the request. A value of 1 indicates a temporary issue;
        /// retry validation for this receipt at a later time. A value of 0 indicates an unresolvable issue;
        /// do not retry validation for this receipt. Only applicable to status codes 21100-21199.
        /// </summary>
        [JsonPropertyName("is-retryable")]
        public bool IsRetryable { get; set; }

        /// <summary>
        /// The latest Base64 encoded app receipt. Only returned for receipts that contain auto-renewable subscriptions.
        /// </summary>
        [JsonPropertyName("latest_receipt")]
        public string LatestReceipt { get; set; }

        /// <summary>
        /// An array that contains all in-app purchase transactions. This excludes transactions for consumable products
        /// that have been marked as finished by your app. Only returned for receipts that contain auto-renewable subscriptions.
        /// </summary>
        [JsonPropertyName("latest_receipt_info")]
        public LatestReceiptInfo[] LatestReceiptInfo { get; set; }
        
        /// <summary>
        /// A JSON representation of the receipt that was sent for verification.
        /// </summary>
        [JsonPropertyName("receipt")]
        public Receipt Receipt { get; set; }
        
        /// <summary>
        /// In the JSON file, an array where each element contains the pending renewal information for each
        /// auto-renewable subscription identified by the product_id. Only returned for app receipts that contain
        /// auto-renewable subscriptions.
        /// </summary>
        [JsonPropertyName("pending_renewal_info")]
        public PendingRenewalInfo[] PendingRenewalInfo { get; set; }
        
        /// <summary>
        /// Either 0 if the receipt is valid, or a status code if there is an error. The status code reflects
        /// the status of the app receipt as a whole. See status for possible status codes and descriptions.
        /// </summary>
        [JsonPropertyName("status")]
        public int Status { get; set; }
    }
    
    public class Receipt
    {
        [JsonPropertyName("adam_id")]
        public int AdamId { get; set; }
        
        // Generated by App Store Connect and used by the App Store to uniquely identify the app purchased. Apps are assigned this identifier only in production. Treat this value as a 64-bit long integer.
        // application_version
        [JsonPropertyName("app_item_id")]
        public int AppItemId { get; set; }
        
        // The app’s version number. The app's version number corresponds to the value of CFBundleVersion (in iOS) or CFBundleShortVersionString (in macOS) in the Info.plist. In production, this value is the current version of the app on the device based on the receipt_creation_date_ms. In the sandbox, the value is always "1.0".
        [JsonPropertyName("application_version")]
        public string ApplicationVersion { get; set; }
        
        // The bundle identifier for the app to which the receipt belongs. You provide this string on App Store Connect. This corresponds to the value of CFBundleIdentifier in the Info.plist file of the app.
        [JsonPropertyName("bundle_id")]
        public string BundleId { get; set; }

        // A unique identifier for the app download transaction.
        [JsonPropertyName("download_id")]
        public Int64 DownloadId { get; set; }

        // The time the receipt expires for apps purchased through the Volume Purchase Program, in UNIX epoch time format, in milliseconds. If this key is not present for apps purchased through the Volume Purchase Program, the receipt does not expire. Use this time format for processing dates.
        [JsonPropertyName("expiration_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime ExpirationDate{ get; set; }
        
        /// <summary>
        /// An array that contains the in-app purchase receipt fields for all in-app purchase transactions.
        /// </summary>
        [JsonPropertyName("in_app")]
        public ReceiptInApp[] InApp { get; set; }

        // The version of the app that the user originally purchased. This value does not change, and corresponds to the value of CFBundleVersion (in iOS) or CFBundleShortVersionString (in macOS) in the Info.plist file of the original purchase. In the sandbox environment, the value is always "1.0".
        [JsonPropertyName("original_application_version")]
        public string OriginalApplicationVersion { get; set; }
        
        // The time of the original app purchase, in UNIX epoch time format, in milliseconds. Use this time format for processing dates.
        [JsonPropertyName("original_purchase_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime OriginalPurchaseDate{ get; set; }
        
        // The time the user ordered the app available for pre-order, in UNIX epoch time format, in milliseconds. This field is only present if the user pre-orders the app. Use this time format for processing dates.
        [JsonPropertyName("preorder_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime PreorderDate{ get; set; }

        /// <summary>
        /// The time the App Store generated the receipt, in UNIX epoch time format, in milliseconds. Use this time format for processing dates. This value does not change.
        /// </summary>
        [JsonPropertyName("receipt_creation_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime ReceiptCreationDate{ get; set; }
        
        /// <summary>
        /// The type of receipt generated. The value corresponds to the environment in which the app or VPP purchase was made.
        /// Possible values: Production, ProductionVPP, ProductionSandbox, ProductionVPPSandbox
        /// </summary>
        [JsonPropertyName("receipt_type")]
        public string ReceiptType { get; set; }

        /// <summary>
        /// The time the request to the verifyReceipt endpoint was processed and the response was generated, in UNIX epoch time format, in milliseconds. Use this time format for processing dates.
        /// </summary>
        [JsonPropertyName("request_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime RequestDate{ get; set; }
        
        /// <summary>
        /// An arbitrary number that identifies a revision of your app. In the sandbox, this key's value is “0”.
        /// </summary>
        [JsonPropertyName("version_external_identifier")]
        public int VersionExternalIdentifier { get; set; }
    }

    public class ReceiptInApp
    {
        // The time Apple customer support canceled a transaction, or the time an auto-renewable subscription plan was upgraded, in UNIX epoch time format, in milliseconds. This field is only present for refunded transactions. Use this time format for processing dates. See cancellation_date_ms for more information.
        [JsonPropertyName("cancellation_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime CancellationDate{ get; set; }

        // The reason for a refunded transaction. When a customer cancels a transaction, the App Store gives them a refund and provides a value for this key. A value of “1” indicates that the customer canceled their transaction due to an actual or perceived issue within your app. A value of “0” indicates that the transaction was canceled for another reason; for example, if the customer made the purchase accidentally.
        // Possible values: 1, 0
        [JsonPropertyName("cancellation_reason")]
        public string CancellationReason { get; set; }

        // The time a subscription expires or when it will renew, in UNIX epoch time format, in milliseconds. Use this time format for processing dates. See expires_date_ms for more information.
        [JsonPropertyName("expires_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime ExpiresDate{ get; set; }

        // A value that indicates whether the user is the purchaser of the product, or is a family member with access to the product through Family Sharing. See in_app_ownership_type for more information.
        [JsonPropertyName("in_app_ownership_type")]
        public string InAppOwnershipType { get; set; }

        // An indicator of whether an auto-renewable subscription is in the introductory price period. See is_in_intro_offer_period for more information.
        [JsonPropertyName("is_in_intro_offer_period")]
        public bool IsInIntroOfferPeriod { get; set; }

        // An indicator of whether a subscription is in the free trial period. See is_trial_period for more information.
        [JsonPropertyName("is_trial_period")]
        public bool IsTrialPeriod { get; set; }

        // The time of the original app purchase, in UNIX epoch time format, in milliseconds. Use this time format for processing dates. For an auto-renewable subscription, this value indicates the date of the subscription’s initial purchase. The original purchase date applies to all product types and remains the same in all transactions for the same product ID. This value corresponds to the original transaction’s transactionDate property in StoreKit.
        [JsonPropertyName("original_purchase_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime OriginalPurchaseDate{ get; set; }

        // The transaction identifier of the original purchase. See original_transaction_id for more information.
        [JsonPropertyName("original_transaction_id")]
        public string OriginalTransactionId { get; set; }

        // The unique identifier of the product purchased. You provide this value when creating the product in App Store Connect, and it corresponds to the productIdentifier property of the SKPayment object stored in the transaction’s payment property.
        [JsonPropertyName("product_id")]
        public string ProductId { get; set; }

        // The identifier of the subscription offer redeemed by the user. See promotional_offer_id for more information.
        [JsonPropertyName("promotional_offer_id")]
        public string PromotionalOfferId { get; set; }

        // For consumable, non-consumable, and non-renewing subscription products, the time the App Store charged the user’s account for a purchased or restored product, in the UNIX epoch time format, in milliseconds. For auto-renewable subscriptions, the time the App Store charged the user’s account for a subscription purchase or renewal after a lapse, in the UNIX epoch time format, in milliseconds. Use this time format for processing dates.
        [JsonPropertyName("purchase_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime PurchaseDate{ get; set; }

        // The number of consumable products purchased. This value corresponds to the quantity property of the SKPayment object stored in the transaction’s payment property. The value is usually “1” unless modified with a mutable payment. The maximum value is 10.
        [JsonPropertyName("quantity")]
        public int Quantity { get; set; }

        // A unique identifier for purchase events across devices, including subscription-renewal events. This value is the primary key for identifying subscription purchases.
        [JsonPropertyName("web_order_line_item_id")]
        public string WebOrderLineItemId { get; set; }

        // A unique identifier for a transaction such as a purchase, restore, or renewal. See transaction_id for more information.
        [JsonPropertyName("transaction_id")]
        public string TransactionId { get; set; }
    }

    public class LatestReceiptInfo
    {
        // The time Apple customer support canceled a transaction, or the time an auto-renewable subscription plan was upgraded, in UNIX epoch time format, in milliseconds. This field is only present for refunded transactions. Use this time format for processing dates. See cancellation_date_ms for more information.
        [JsonPropertyName("cancellation_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime CancellationDate { get; set; }

        // The reason for a refunded transaction. When a customer cancels a transaction, the App Store gives them a refund and provides a value for this key. A value of “1” indicates that the customer canceled their transaction due to an actual or perceived issue within your app. A value of “0” indicates that the transaction was canceled for another reason; for example, if the customer made the purchase accidentally.
        // Possible values: 1, 0
        [JsonPropertyName("cancellation_reason")]
        public string CancellationReason { get; set; }

        // The time a subscription expires or when it will renew, in UNIX epoch time format, in milliseconds. Use this time format for processing dates. See expires_date_ms for more information.
        [JsonPropertyName("expires_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime ExpiresDate{ get; set; }

        // A value that indicates whether the user is the purchaser of the product, or is a family member with access to the product through Family Sharing. See in_app_ownership_type for more information.
        [JsonPropertyName("in_app_ownership_type")]
        public string InAppOwnershipType { get; set; }

        // An indicator of whether an auto-renewable subscription is in the introductory price period. See is_in_intro_offer_period for more information.
        [JsonPropertyName("is_in_intro_offer_period")]
        public bool IsInIntroOfferPeriod { get; set; }

        // An indicator of whether a subscription is in the free trial period. See is_trial_period for more information.
        [JsonPropertyName("is_trial_period")]
        public bool IsTrialPeriod { get; set; }

        // An indicator that a subscription has been canceled due to an upgrade. This field is only present for upgrade transactions.
        [JsonPropertyName("is_upgraded")]
        public bool IsUpgraded { get; set; }

        // The reference name of a subscription offer that you configured in App Store Connect. This field is present when a customer redeemed a subscription offer code. For more information about offer codes, see Set Up Offer Codes, and Implementing Offer Codes in Your App.
        [JsonPropertyName("offer_code_ref_name")]
        public string OfferCodeRefNameIsUpgraded { get; set; }

        // The time of the original app purchase, in UNIX epoch time format, in milliseconds. Use this time format for processing dates. For an auto-renewable subscription, this value indicates the date of the subscription’s initial purchase. The original purchase date applies to all product types and remains the same in all transactions for the same product ID. This value corresponds to the original transaction’s transactionDate property in StoreKit.
        [JsonPropertyName("original_purchase_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime OriginalPurchaseDate{ get; set; }

        // The transaction identifier of the original purchase. See original_transaction_id for more information.
        [JsonPropertyName("original_transaction_id")]
        public string OriginalTransactionId { get; set; }

        // The unique identifier of the product purchased. You provide this value when creating the product in App Store Connect, and it corresponds to the productIdentifier property of the SKPayment object stored in the transaction’s payment property.
        [JsonPropertyName("product_id")]
        public string ProductId { get; set; }

        // The identifier of the subscription offer redeemed by the user. See promotional_offer_id for more information.
        [JsonPropertyName("promotional_offer_id")]
        public string PromotionalOfferId { get; set; }

        // For consumable, non-consumable, and non-renewing subscription products, the time the App Store charged the user’s account for a purchased or restored product, in the UNIX epoch time format, in milliseconds. For auto-renewable subscriptions, the time the App Store charged the user’s account for a subscription purchase or renewal after a lapse, in the UNIX epoch time format, in milliseconds. Use this time format for processing dates.
        [JsonPropertyName("purchase_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime PurchaseDate{ get; set; }

        // The number of consumable products purchased. This value corresponds to the quantity property of the SKPayment object stored in the transaction’s payment property. The value is usually “1” unless modified with a mutable payment. The maximum value is 10.
        [JsonPropertyName("quantity")]
        public int Quantity { get; set; }

        // The identifier of the subscription group to which the subscription belongs. The value for this field is identical to the subscriptionGroupIdentifier property in SKProduct.
        [JsonPropertyName("subscription_group_identifier")]
        public string SubscriptionGroupIdentifier { get; set; }

        // A unique identifier for purchase events across devices, including subscription-renewal events. This value is the primary key for identifying subscription purchases.
        [JsonPropertyName("web_order_line_item_id")]
        public string WebOrderLineItemId { get; set; }

        // A unique identifier for a transaction such as a purchase, restore, or renewal. See transaction_id for more information.
        [JsonPropertyName("transaction_id")]
        public string TransactionId { get; set; }
    }

    public class PendingRenewalInfo
    {
        /// <summary>
        /// The current renewal preference for the auto-renewable subscription. The value for this key corresponds to
        /// the productIdentifier property of the product that the customer’s subscription renews.
        /// This field is only present if the user downgrades or crossgrades to a subscription of a different duration
        /// for the subsequent subscription period.
        /// </summary>
        [JsonPropertyName("auto_renew_product_id")]
        public string AutoRenewProductId { get; set; }

        /// <summary>
        /// The current renewal status for the auto-renewable subscription. See auto_renew_status for more information.
        /// 1 - The subscription will renew at the end of the current subscription period.
        /// 0 - The customer has turned off automatic renewal for the subscription.
        /// </summary>
        [JsonPropertyName("auto_renew_status")]
        public int AutoRenewStatus { get; set; }

        /// <summary>
        /// The reason a subscription expired. This field is only present for a receipt that contains an expired auto-renewable subscription.
        /// 1 - The customer voluntarily canceled their subscription.
        /// 2 - Billing error; for example, the customer's payment information was no longer valid.
        /// 3 - The customer did not agree to a recent price increase.
        /// 4 - The product was not available for purchase at the time of renewal.
        /// 5 - Unknown error.
        /// </summary>
        [JsonPropertyName("expiration_intent")]
        public int ExpirationIntent { get; set; }

        /// <summary>
        /// The time at which the grace period for subscription renewals expires, in UNIX epoch time format,
        /// in milliseconds. This key is only present for apps that have Billing Grace Period enabled and when
        /// the user experiences a billing error at the time of renewal. Use this time format for processing dates.
        /// </summary>
        [JsonPropertyName("grace_period_expires_date_ms")]
        [JsonConverter(typeof(EpochDateTimeConverter))]
        public DateTime GracePeriodExpiresDate{ get; set; }
        
        /// <summary>
        /// A flag that indicates Apple is attempting to renew an expired subscription automatically.
        /// This field is only present if an auto-renewable subscription is in the billing retry state.
        /// See is_in_billing_retry_period for more information.
        /// 1 - The App Store is attempting to renew the subscription.
        /// 0 - The App Store has stopped attempting to renew the subscription.
        /// </summary>
        [JsonPropertyName("is_in_billing_retry_period")]
        public int IsInBillingRetryPeriod { get; set; }

        /// <summary>
        /// The reference name of a subscription offer that you configured in App Store Connect.
        /// This field is present when a customer redeemed a subscription offer code.
        /// For more information, see offer_code_ref_name.
        /// </summary>
        [JsonPropertyName("offer_code_ref_name")]
        public string OfferCodeRefName { get; set; }
        
        /// <summary>
        /// The transaction identifier of the original purchase.
        /// </summary>
        [JsonPropertyName("original_transaction_id")]
        public string OriginalTransactionId { get; set; }
        
        /// <summary>
        /// The price consent status for a subscription price increase. This field is only present if the customer
        /// was notified of the price increase. The default value is "0" and changes to "1" if the customer consents.
        /// </summary>
        [JsonPropertyName("price_consent_status")]
        public int PriceConsentStatus { get; set; }

        /// <summary>
        /// The unique identifier of the product purchased. You provide this value when creating the product
        /// in App Store Connect, and it corresponds to the productIdentifier property of the SKPayment object stored
        /// in the transaction's payment property.
        /// </summary>
        [JsonPropertyName("product_id")]
        public string ProductId { get; set; }
    }
    
    public class BooleanConverter : JsonConverter<bool>
    {
        public override bool Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            Debug.Assert(typeToConvert == typeof(bool));
            return bool.TryParse(reader.GetString(), out bool value) && value;
        }
 
        public override void Write(Utf8JsonWriter writer, bool value, JsonSerializerOptions options)
        {
            writer.WriteStringValue(value.ToString());
        }
    }
    
    public class EpochDateTimeConverter : JsonConverter<DateTime>
    {
        public override DateTime Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            Debug.Assert(typeToConvert == typeof(DateTime));
            var t = long.Parse(reader.GetString() ?? throw new InvalidOperationException());

            if (t == 0)
            {
                return DateTime.MinValue;
            }

            return new DateTime(1970, 1, 1).AddMilliseconds(t);
        }

        public override void Write(Utf8JsonWriter writer, DateTime value, JsonSerializerOptions options)
        {
            throw new NotImplementedException();
        }
    }
}